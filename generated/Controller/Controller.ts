// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AccountOperatorUpdated extends ethereum.Event {
  get params(): AccountOperatorUpdated__Params {
    return new AccountOperatorUpdated__Params(this);
  }
}

export class AccountOperatorUpdated__Params {
  _event: AccountOperatorUpdated;

  constructor(event: AccountOperatorUpdated) {
    this._event = event;
  }

  get accountOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get operator(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get isSet(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }
}

export class CallExecuted extends ethereum.Event {
  get params(): CallExecuted__Params {
    return new CallExecuted__Params(this);
  }
}

export class CallExecuted__Params {
  _event: CallExecuted;

  constructor(event: CallExecuted) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get vaultOwner(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get vaultId(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get data(): Bytes {
    return this._event.parameters[4].value.toBytes();
  }
}

export class CallRestricted extends ethereum.Event {
  get params(): CallRestricted__Params {
    return new CallRestricted__Params(this);
  }
}

export class CallRestricted__Params {
  _event: CallRestricted;

  constructor(event: CallRestricted) {
    this._event = event;
  }

  get isRestricted(): boolean {
    return this._event.parameters[0].value.toBoolean();
  }
}

export class CollateralAssetDeposited extends ethereum.Event {
  get params(): CollateralAssetDeposited__Params {
    return new CollateralAssetDeposited__Params(this);
  }
}

export class CollateralAssetDeposited__Params {
  _event: CollateralAssetDeposited;

  constructor(event: CollateralAssetDeposited) {
    this._event = event;
  }

  get asset(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get accountOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get from(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get vaultId(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class CollateralAssetWithdrawed extends ethereum.Event {
  get params(): CollateralAssetWithdrawed__Params {
    return new CollateralAssetWithdrawed__Params(this);
  }
}

export class CollateralAssetWithdrawed__Params {
  _event: CollateralAssetWithdrawed;

  constructor(event: CollateralAssetWithdrawed) {
    this._event = event;
  }

  get asset(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get AccountOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get vaultId(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class FullPauserUpdated extends ethereum.Event {
  get params(): FullPauserUpdated__Params {
    return new FullPauserUpdated__Params(this);
  }
}

export class FullPauserUpdated__Params {
  _event: FullPauserUpdated;

  constructor(event: FullPauserUpdated) {
    this._event = event;
  }

  get oldFullPauser(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newFullPauser(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class LongOtokenDeposited extends ethereum.Event {
  get params(): LongOtokenDeposited__Params {
    return new LongOtokenDeposited__Params(this);
  }
}

export class LongOtokenDeposited__Params {
  _event: LongOtokenDeposited;

  constructor(event: LongOtokenDeposited) {
    this._event = event;
  }

  get otoken(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get accountOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get from(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get vaultId(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class LongOtokenWithdrawed extends ethereum.Event {
  get params(): LongOtokenWithdrawed__Params {
    return new LongOtokenWithdrawed__Params(this);
  }
}

export class LongOtokenWithdrawed__Params {
  _event: LongOtokenWithdrawed;

  constructor(event: LongOtokenWithdrawed) {
    this._event = event;
  }

  get otoken(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get AccountOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get vaultId(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class PartialPauserUpdated extends ethereum.Event {
  get params(): PartialPauserUpdated__Params {
    return new PartialPauserUpdated__Params(this);
  }
}

export class PartialPauserUpdated__Params {
  _event: PartialPauserUpdated;

  constructor(event: PartialPauserUpdated) {
    this._event = event;
  }

  get oldPartialPauser(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newPartialPauser(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Redeem extends ethereum.Event {
  get params(): Redeem__Params {
    return new Redeem__Params(this);
  }
}

export class Redeem__Params {
  _event: Redeem;

  constructor(event: Redeem) {
    this._event = event;
  }

  get otoken(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get redeemer(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get receiver(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get collateralAsset(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get otokenBurned(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get payout(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class ShortOtokenBurned extends ethereum.Event {
  get params(): ShortOtokenBurned__Params {
    return new ShortOtokenBurned__Params(this);
  }
}

export class ShortOtokenBurned__Params {
  _event: ShortOtokenBurned;

  constructor(event: ShortOtokenBurned) {
    this._event = event;
  }

  get otoken(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get AccountOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get from(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get vaultId(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class ShortOtokenMinted extends ethereum.Event {
  get params(): ShortOtokenMinted__Params {
    return new ShortOtokenMinted__Params(this);
  }
}

export class ShortOtokenMinted__Params {
  _event: ShortOtokenMinted;

  constructor(event: ShortOtokenMinted) {
    this._event = event;
  }

  get otoken(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get AccountOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get vaultId(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class SystemFullyPaused extends ethereum.Event {
  get params(): SystemFullyPaused__Params {
    return new SystemFullyPaused__Params(this);
  }
}

export class SystemFullyPaused__Params {
  _event: SystemFullyPaused;

  constructor(event: SystemFullyPaused) {
    this._event = event;
  }

  get isActive(): boolean {
    return this._event.parameters[0].value.toBoolean();
  }
}

export class SystemPartiallyPaused extends ethereum.Event {
  get params(): SystemPartiallyPaused__Params {
    return new SystemPartiallyPaused__Params(this);
  }
}

export class SystemPartiallyPaused__Params {
  _event: SystemPartiallyPaused;

  constructor(event: SystemPartiallyPaused) {
    this._event = event;
  }

  get isActive(): boolean {
    return this._event.parameters[0].value.toBoolean();
  }
}

export class VaultOpened extends ethereum.Event {
  get params(): VaultOpened__Params {
    return new VaultOpened__Params(this);
  }
}

export class VaultOpened__Params {
  _event: VaultOpened;

  constructor(event: VaultOpened) {
    this._event = event;
  }

  get accountOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get vaultId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class VaultSettled extends ethereum.Event {
  get params(): VaultSettled__Params {
    return new VaultSettled__Params(this);
  }
}

export class VaultSettled__Params {
  _event: VaultSettled;

  constructor(event: VaultSettled) {
    this._event = event;
  }

  get AccountOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get vaultId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get payout(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class Controller__getConfigurationResult {
  value0: Address;
  value1: Address;
  value2: Address;
  value3: Address;

  constructor(
    value0: Address,
    value1: Address,
    value2: Address,
    value3: Address
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromAddress(this.value2));
    map.set("value3", ethereum.Value.fromAddress(this.value3));
    return map;
  }
}

export class Controller__getVaultResultValue0Struct extends ethereum.Tuple {
  get shortOtokens(): Array<Address> {
    return this[0].toAddressArray();
  }

  get longOtokens(): Array<Address> {
    return this[1].toAddressArray();
  }

  get collateralAssets(): Array<Address> {
    return this[2].toAddressArray();
  }

  get shortAmounts(): Array<BigInt> {
    return this[3].toBigIntArray();
  }

  get longAmounts(): Array<BigInt> {
    return this[4].toBigIntArray();
  }

  get collateralAmounts(): Array<BigInt> {
    return this[5].toBigIntArray();
  }
}

export class Controller extends ethereum.SmartContract {
  static bind(address: Address): Controller {
    return new Controller("Controller", address);
  }

  addressbook(): Address {
    let result = super.call("addressbook", "addressbook():(address)", []);

    return result[0].toAddress();
  }

  try_addressbook(): ethereum.CallResult<Address> {
    let result = super.tryCall("addressbook", "addressbook():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  calculator(): Address {
    let result = super.call("calculator", "calculator():(address)", []);

    return result[0].toAddress();
  }

  try_calculator(): ethereum.CallResult<Address> {
    let result = super.tryCall("calculator", "calculator():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  callRestricted(): boolean {
    let result = super.call("callRestricted", "callRestricted():(bool)", []);

    return result[0].toBoolean();
  }

  try_callRestricted(): ethereum.CallResult<boolean> {
    let result = super.tryCall("callRestricted", "callRestricted():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  fullPauser(): Address {
    let result = super.call("fullPauser", "fullPauser():(address)", []);

    return result[0].toAddress();
  }

  try_fullPauser(): ethereum.CallResult<Address> {
    let result = super.tryCall("fullPauser", "fullPauser():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getAccountVaultCounter(_accountOwner: Address): BigInt {
    let result = super.call(
      "getAccountVaultCounter",
      "getAccountVaultCounter(address):(uint256)",
      [ethereum.Value.fromAddress(_accountOwner)]
    );

    return result[0].toBigInt();
  }

  try_getAccountVaultCounter(
    _accountOwner: Address
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getAccountVaultCounter",
      "getAccountVaultCounter(address):(uint256)",
      [ethereum.Value.fromAddress(_accountOwner)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getConfiguration(): Controller__getConfigurationResult {
    let result = super.call(
      "getConfiguration",
      "getConfiguration():(address,address,address,address)",
      []
    );

    return new Controller__getConfigurationResult(
      result[0].toAddress(),
      result[1].toAddress(),
      result[2].toAddress(),
      result[3].toAddress()
    );
  }

  try_getConfiguration(): ethereum.CallResult<
    Controller__getConfigurationResult
  > {
    let result = super.tryCall(
      "getConfiguration",
      "getConfiguration():(address,address,address,address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Controller__getConfigurationResult(
        value[0].toAddress(),
        value[1].toAddress(),
        value[2].toAddress(),
        value[3].toAddress()
      )
    );
  }

  getPayout(_otoken: Address, _amount: BigInt): BigInt {
    let result = super.call(
      "getPayout",
      "getPayout(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(_otoken),
        ethereum.Value.fromUnsignedBigInt(_amount)
      ]
    );

    return result[0].toBigInt();
  }

  try_getPayout(
    _otoken: Address,
    _amount: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getPayout",
      "getPayout(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(_otoken),
        ethereum.Value.fromUnsignedBigInt(_amount)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getProceed(_owner: Address, _vaultId: BigInt): BigInt {
    let result = super.call(
      "getProceed",
      "getProceed(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(_owner),
        ethereum.Value.fromUnsignedBigInt(_vaultId)
      ]
    );

    return result[0].toBigInt();
  }

  try_getProceed(
    _owner: Address,
    _vaultId: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getProceed",
      "getProceed(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(_owner),
        ethereum.Value.fromUnsignedBigInt(_vaultId)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getVault(
    _owner: Address,
    _vaultId: BigInt
  ): Controller__getVaultResultValue0Struct {
    let result = super.call(
      "getVault",
      "getVault(address,uint256):((address[],address[],address[],uint256[],uint256[],uint256[]))",
      [
        ethereum.Value.fromAddress(_owner),
        ethereum.Value.fromUnsignedBigInt(_vaultId)
      ]
    );

    return result[0].toTuple() as Controller__getVaultResultValue0Struct;
  }

  try_getVault(
    _owner: Address,
    _vaultId: BigInt
  ): ethereum.CallResult<Controller__getVaultResultValue0Struct> {
    let result = super.tryCall(
      "getVault",
      "getVault(address,uint256):((address[],address[],address[],uint256[],uint256[],uint256[]))",
      [
        ethereum.Value.fromAddress(_owner),
        ethereum.Value.fromUnsignedBigInt(_vaultId)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTuple() as Controller__getVaultResultValue0Struct
    );
  }

  hasExpired(_otoken: Address): boolean {
    let result = super.call("hasExpired", "hasExpired(address):(bool)", [
      ethereum.Value.fromAddress(_otoken)
    ]);

    return result[0].toBoolean();
  }

  try_hasExpired(_otoken: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("hasExpired", "hasExpired(address):(bool)", [
      ethereum.Value.fromAddress(_otoken)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isOperator(_owner: Address, _operator: Address): boolean {
    let result = super.call(
      "isOperator",
      "isOperator(address,address):(bool)",
      [
        ethereum.Value.fromAddress(_owner),
        ethereum.Value.fromAddress(_operator)
      ]
    );

    return result[0].toBoolean();
  }

  try_isOperator(
    _owner: Address,
    _operator: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isOperator",
      "isOperator(address,address):(bool)",
      [
        ethereum.Value.fromAddress(_owner),
        ethereum.Value.fromAddress(_operator)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isSettlementAllowed(_otoken: Address): boolean {
    let result = super.call(
      "isSettlementAllowed",
      "isSettlementAllowed(address):(bool)",
      [ethereum.Value.fromAddress(_otoken)]
    );

    return result[0].toBoolean();
  }

  try_isSettlementAllowed(_otoken: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isSettlementAllowed",
      "isSettlementAllowed(address):(bool)",
      [ethereum.Value.fromAddress(_otoken)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  oracle(): Address {
    let result = super.call("oracle", "oracle():(address)", []);

    return result[0].toAddress();
  }

  try_oracle(): ethereum.CallResult<Address> {
    let result = super.tryCall("oracle", "oracle():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  partialPauser(): Address {
    let result = super.call("partialPauser", "partialPauser():(address)", []);

    return result[0].toAddress();
  }

  try_partialPauser(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "partialPauser",
      "partialPauser():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  pool(): Address {
    let result = super.call("pool", "pool():(address)", []);

    return result[0].toAddress();
  }

  try_pool(): ethereum.CallResult<Address> {
    let result = super.tryCall("pool", "pool():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  systemFullyPaused(): boolean {
    let result = super.call(
      "systemFullyPaused",
      "systemFullyPaused():(bool)",
      []
    );

    return result[0].toBoolean();
  }

  try_systemFullyPaused(): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "systemFullyPaused",
      "systemFullyPaused():(bool)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  systemPartiallyPaused(): boolean {
    let result = super.call(
      "systemPartiallyPaused",
      "systemPartiallyPaused():(bool)",
      []
    );

    return result[0].toBoolean();
  }

  try_systemPartiallyPaused(): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "systemPartiallyPaused",
      "systemPartiallyPaused():(bool)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  whitelist(): Address {
    let result = super.call("whitelist", "whitelist():(address)", []);

    return result[0].toAddress();
  }

  try_whitelist(): ethereum.CallResult<Address> {
    let result = super.tryCall("whitelist", "whitelist():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get _addressBook(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _owner(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class OperateCall extends ethereum.Call {
  get inputs(): OperateCall__Inputs {
    return new OperateCall__Inputs(this);
  }

  get outputs(): OperateCall__Outputs {
    return new OperateCall__Outputs(this);
  }
}

export class OperateCall__Inputs {
  _call: OperateCall;

  constructor(call: OperateCall) {
    this._call = call;
  }

  get _actions(): Array<OperateCall_actionsStruct> {
    return this._call.inputValues[0].value.toTupleArray<
      OperateCall_actionsStruct
    >();
  }
}

export class OperateCall__Outputs {
  _call: OperateCall;

  constructor(call: OperateCall) {
    this._call = call;
  }
}

export class OperateCall_actionsStruct extends ethereum.Tuple {
  get actionType(): i32 {
    return this[0].toI32();
  }

  get owner(): Address {
    return this[1].toAddress();
  }

  get secondAddress(): Address {
    return this[2].toAddress();
  }

  get asset(): Address {
    return this[3].toAddress();
  }

  get vaultId(): BigInt {
    return this[4].toBigInt();
  }

  get amount(): BigInt {
    return this[5].toBigInt();
  }

  get index(): BigInt {
    return this[6].toBigInt();
  }

  get data(): Bytes {
    return this[7].toBytes();
  }
}

export class RefreshConfigurationCall extends ethereum.Call {
  get inputs(): RefreshConfigurationCall__Inputs {
    return new RefreshConfigurationCall__Inputs(this);
  }

  get outputs(): RefreshConfigurationCall__Outputs {
    return new RefreshConfigurationCall__Outputs(this);
  }
}

export class RefreshConfigurationCall__Inputs {
  _call: RefreshConfigurationCall;

  constructor(call: RefreshConfigurationCall) {
    this._call = call;
  }
}

export class RefreshConfigurationCall__Outputs {
  _call: RefreshConfigurationCall;

  constructor(call: RefreshConfigurationCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetCallRestrictionCall extends ethereum.Call {
  get inputs(): SetCallRestrictionCall__Inputs {
    return new SetCallRestrictionCall__Inputs(this);
  }

  get outputs(): SetCallRestrictionCall__Outputs {
    return new SetCallRestrictionCall__Outputs(this);
  }
}

export class SetCallRestrictionCall__Inputs {
  _call: SetCallRestrictionCall;

  constructor(call: SetCallRestrictionCall) {
    this._call = call;
  }

  get _isRestricted(): boolean {
    return this._call.inputValues[0].value.toBoolean();
  }
}

export class SetCallRestrictionCall__Outputs {
  _call: SetCallRestrictionCall;

  constructor(call: SetCallRestrictionCall) {
    this._call = call;
  }
}

export class SetFullPauserCall extends ethereum.Call {
  get inputs(): SetFullPauserCall__Inputs {
    return new SetFullPauserCall__Inputs(this);
  }

  get outputs(): SetFullPauserCall__Outputs {
    return new SetFullPauserCall__Outputs(this);
  }
}

export class SetFullPauserCall__Inputs {
  _call: SetFullPauserCall;

  constructor(call: SetFullPauserCall) {
    this._call = call;
  }

  get _fullPauser(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetFullPauserCall__Outputs {
  _call: SetFullPauserCall;

  constructor(call: SetFullPauserCall) {
    this._call = call;
  }
}

export class SetOperatorCall extends ethereum.Call {
  get inputs(): SetOperatorCall__Inputs {
    return new SetOperatorCall__Inputs(this);
  }

  get outputs(): SetOperatorCall__Outputs {
    return new SetOperatorCall__Outputs(this);
  }
}

export class SetOperatorCall__Inputs {
  _call: SetOperatorCall;

  constructor(call: SetOperatorCall) {
    this._call = call;
  }

  get _operator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _isOperator(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetOperatorCall__Outputs {
  _call: SetOperatorCall;

  constructor(call: SetOperatorCall) {
    this._call = call;
  }
}

export class SetPartialPauserCall extends ethereum.Call {
  get inputs(): SetPartialPauserCall__Inputs {
    return new SetPartialPauserCall__Inputs(this);
  }

  get outputs(): SetPartialPauserCall__Outputs {
    return new SetPartialPauserCall__Outputs(this);
  }
}

export class SetPartialPauserCall__Inputs {
  _call: SetPartialPauserCall;

  constructor(call: SetPartialPauserCall) {
    this._call = call;
  }

  get _partialPauser(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetPartialPauserCall__Outputs {
  _call: SetPartialPauserCall;

  constructor(call: SetPartialPauserCall) {
    this._call = call;
  }
}

export class SetSystemFullyPausedCall extends ethereum.Call {
  get inputs(): SetSystemFullyPausedCall__Inputs {
    return new SetSystemFullyPausedCall__Inputs(this);
  }

  get outputs(): SetSystemFullyPausedCall__Outputs {
    return new SetSystemFullyPausedCall__Outputs(this);
  }
}

export class SetSystemFullyPausedCall__Inputs {
  _call: SetSystemFullyPausedCall;

  constructor(call: SetSystemFullyPausedCall) {
    this._call = call;
  }

  get _fullyPaused(): boolean {
    return this._call.inputValues[0].value.toBoolean();
  }
}

export class SetSystemFullyPausedCall__Outputs {
  _call: SetSystemFullyPausedCall;

  constructor(call: SetSystemFullyPausedCall) {
    this._call = call;
  }
}

export class SetSystemPartiallyPausedCall extends ethereum.Call {
  get inputs(): SetSystemPartiallyPausedCall__Inputs {
    return new SetSystemPartiallyPausedCall__Inputs(this);
  }

  get outputs(): SetSystemPartiallyPausedCall__Outputs {
    return new SetSystemPartiallyPausedCall__Outputs(this);
  }
}

export class SetSystemPartiallyPausedCall__Inputs {
  _call: SetSystemPartiallyPausedCall;

  constructor(call: SetSystemPartiallyPausedCall) {
    this._call = call;
  }

  get _partiallyPaused(): boolean {
    return this._call.inputValues[0].value.toBoolean();
  }
}

export class SetSystemPartiallyPausedCall__Outputs {
  _call: SetSystemPartiallyPausedCall;

  constructor(call: SetSystemPartiallyPausedCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
